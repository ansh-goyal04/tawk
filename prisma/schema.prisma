generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conversations Conversation[] @relation("UserConversations")
  messages Message[]
  accounts Account[]

  seenMessages Message[] @relation("Seen")
}

model Account {
  id String @id @default(uuid())
  userId String
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.Text
  access_token String? @db.Text
  expires_at Int?
  token_type String?
  scope String?
  id_token String @db.Text
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Conversation {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name String?
  isGroup Boolean?

  messages Message[]

  users User[] @relation("UserConversations") // No `references` needed
}

model Message {
  id String @id @default(uuid())
  body String?
  image String?
  createdAt DateTime @default(now())

  seen User[] @relation("Seen") // No `references` needed

  conversationId String
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  senderId String
  sender User @relation(fields: [senderId], references: [id], onDelete: Cascade)
}
